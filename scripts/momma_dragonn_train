#!/usr/bin/env python
from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
import sys
import os
import yaml
import momma_dragonn
from collections import OrderedDict
from avutils import file_processing as fp

def momma_dragonn_train(options):
    valid_data_loader = momma_dragonn.loaders.load_data_loader(
                            config=options.valid_data_loader_config)
    model_evaluator = momma_dragonn.loaders.load_model_evaluator(
                            options.evaluator_config)

    end_of_epoch_callbacks = momma_dragonn.loaders.load_end_of_epoch_callbacks(
                                config=options.end_of_epoch_callbacks_config)

    end_of_training_callbacks =\
        momma_dragonn.loaders.load_end_of_training_callbacks(
            config=options.end_of_training_callbacks_config,
            key_metric_name=model_evaluator.get_key_metric_name())

    list_of_hyperparameter_settings =\
        momma_dragonn.loaders.load_hyperparameter_configs_list(
                                        options.hyperparameter_configs_list)

    for hyperparameter_setting in list_of_hyperparameter_settings:
        other_data_loaders = hyperparameter_setting["other_data_loaders"]
        model_creator = hyperparameter_setting["model_creator"]
        model_trainer = hyperparameter_setting["model_trainer"]
        model_wrapper, performance_history, training_metadata =\
            model_trainer.train(
                model_wrapper=model_creator.get_model_wrapper(),
                model_evaluator=model_evaluator,
                valid_data_loader=valid_data_loader,
                other_data_loaders=other_data_loaders,
                end_of_epoch_callbacks=end_of_epoch_callbacks)

        model_trainer_config = model_trainer

        for end_of_training_callback in end_of_training_callbacks:
            end_of_training_callback( #handles writing to db
                performance_history=performance_history,
                model_wrapper=model_wrapper,
                training_metadata=training_metadata,
                model_creator_info=model_creator.get_jsonable_object(),
                model_trainer_info=model_trainer.get_jsonable_object(),
                other_data_loaders_info=\
                OrderedDict([
                (split_name, data_loader.get_jsonable_object())
                for (split_name, data_loader) in other_data_loaders.items()])

if __name__ == "__main__":
    import argparse;
    parser = argparse.ArgumentParser()
    parser.add_argument("--valid_data_loader_config", required=True)
    parser.add_argument("--evaluator_config", required=True)
    parser.add_argument("--end_of_epoch_callbacks_config", required=True)
    parser.add_argument("--end_of_training_callbacks_config", required=True)
    parser.add_argument("--hyperparameter_configs_list", required=True)
    options = parser.parse_args();
    momma_dragonn_train(options)
