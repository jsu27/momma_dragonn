[
{
    "other_data_loaders":{
        "train": {
            "class": "hdf5_data_loader.MultimodalBatchDataLoader",
            "kwargs": {
                "batch_size": 50,
                "path_to_hdf5": "train_data.hdf5",
                "num_to_load_for_eval": 3000, #if my training data is YUGE
                #and I only want to load a subset when I'm calculating the
                #performance stats on the training data, specify this number,
                #and only that many datapoints of the training data will be used
                #for performance stat calculation
                "bundle_x_and_y_in_generator": True #True for keras 0.3, false for 1.0
            }
        }
    },
    "model_creator":{
        "class": "flexible_keras.FlexibleKerasGraph",
        "kwargs": {
            "inputs_config": [
                {"name": "sequence",
                 "input_shape": [1, 4, 200]} #shape would change for tensorflow; channel axis is last
            ],
            "nodes_config": [
                {
                    "name": "conv1",
                    "input_name": "sequence", 
                    "class": "keras.layers.convolutional.Convolution2D", 
                    "kwargs": {
                        "nb_filter": 51,
                        "nb_row": 4,
                        "nb_col": 11,
                        "border_mode": "same",
                        "W_constraint": {
                            "autoload": true, #turn the dictionary into a class
                            "class": "keras.constraints.maxnorm",
                            "kwargs": {"m": 7, "axis": 1}
                        },
                        "activity_regularizer": {
                            "autoload": true,
                            "class": "keras.regularizers.ActivityRegularizer",
                            "kwargs": {"l1":0.00001}
                        }
                    }
                },
                {
                    "name": "conv1_act",
                    "input_name": "conv1", 
                    "class": "keras.layers.core.Activation", 
                    "kwargs": {"activation": "relu"}
                },
                {
                    "name": "conv2",
                    "input_name": "conv1_act", 
                    "class": "keras.layers.convolutional.Convolution2D", 
                    "kwargs": {
                        "nb_filter": 49,
                        "nb_row": 1,
                        "nb_col": 10,
                        "border_mode": "same"
                       }
                },
                {
                    "name": "conv2_act",
                    "input_name": "conv2", 
                    "class": "keras.layers.core.Activation", 
                    "kwargs": {"activation": "relu"}
                },
                {
                    "name": "conv3",
                    "input_name": ["conv1_act", "conv2_act"], 
                    "merge_mode": "concat",
                    "concat_axis": 1,
                    "class": "keras.layers.convolutional.Convolution2D", 
                    "kwargs": {"nb_filter": 10, "nb_row": 1, "nb_col": 10}
                },
                {
                    "name": "conv3_act",
                    "input_name": "conv3", 
                    "class": "keras.layers.core.Activation", 
                    "kwargs": {"activation": "relu"}
                },
                {
                    "name": "max_pool",
                    "input_name": "conv3_act", 
                    "class": "keras.layers.convolutional.MaxPooling2D", 
                    "kwargs": {"pool_size": [1,40], "strides": [1,40]}
                },
                {
                    "name": "flatten",
                    "input_name": "max_pool", 
                    "class": "keras.layers.core.Flatten", 
                    "kwargs": {}
                },
                {
                    "name": "output_preact",
                    "input_name": "flatten", 
                    "class": "keras.layers.core.Dense", 
                    "kwargs": {"output_dim": 2}
                },
                {
                    "name": "output_act",
                    "input_name": "output_preact", 
                    "class": "keras.layers.core.Activation", 
                    "kwargs": {"activation": "sigmoid"}
                }
            ],
            "outputs_config": [
               {"name": "output",
                "input": "output_act"}
            ],
            "optimizer_config": {
                "class": "keras.optimizers.Adam",
                "kwargs": {"lr": 0.001}
            },
            "loss_dictionary": {
                "output": "binary_crossentropy"
            }  
        } 
    },
    "model_trainer":{
        "class": "keras_model_trainer.KerasFitGeneratorModelTrainer",
        "kwargs": {
            "samples_per_epoch": 3000,
            "stopping_criterion_config": {
                "class": "EarlyStopping" ,
                "kwargs": {
                   "max_epochs": 300, 
                   "epochs_to_wait": 3
                } 
            },
            #"class_weight": {"0":1, "1":25}
        }
    },
    "message": "Test model"
}
]
